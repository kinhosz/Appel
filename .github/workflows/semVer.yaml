name: Update version
on:
  pull_request_target:
    types:
      - closed
  push:

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - name: Was Merged
      run: echo Was merged
  
  update_major:
    needs: if_merged
    if: startsWith(github.head_ref, 'break/')
    runs-on: ubuntu-latest
    steps:
    - name: Setting major version
      run: echo update MAJOR

  update_minor:
    needs: if_merged
    if: startsWith(github.head_ref, 'feat/')
    runs-on: ubuntu-latest
    steps:
    - name: Setting minor version
      run: echo update minor

  update_patch:
    needs: [update_major, update_minor, if_merged]
    if: |
      always() &&
      needs.if_merged.result == 'success' && 
      needs.update_major.result != 'success' && 
      needs.update_minor.result != 'success'

    runs-on: ubuntu-latest
    steps:
    - name: setting patch version
      run: echo update patch
  
  commit_changes:
    needs: [update_patch, if_merged]
    if: |
      always() &&
      needs.if_merged.result == 'success'

    runs-on: ubuntu-latest
    steps:
    - name: Setting checkout
      uses: actions/checkout@v3
    - name: See what the branch
      run: git branch
    
    - name: See github.ref_name
      run: echo ${{ github.ref_name }}
    - name: See github.head_ref
      run: echo ${{ github.head_ref }}
    - name: Obter mensagem de squash commit
      run: |
        pr_number=$(jq -r '.number' $GITHUB_EVENT_PATH)
        squash_commit_message=$(gh pr view $pr_number --json title -q '.merge_commit_message')
        echo "Mensagem do squash commit: $squash_commit_message"

# apenas testando
# vamos testar se ele faz o major certinho