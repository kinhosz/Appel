name: Update version
on:
  pull_request_target:
    types:
      - closed
  push:

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - name: Was Merged
      run: echo Was merged
  
  update_major:
    needs: if_merged
    if: startsWith(github.head_ref, 'break/')
    runs-on: ubuntu-latest
    steps:
    - name: Setting major version
      run: echo update MAJOR

  update_minor:
    needs: if_merged
    if: startsWith(github.head_ref, 'feat/')
    runs-on: ubuntu-latest
    steps:
    - name: Setting minor version
      run: echo update minor

  update_patch:
    needs: [update_major, update_minor, if_merged]
    if: |
      always() &&
      needs.if_merged.result == 'success' && 
      needs.update_major.result != 'success' && 
      needs.update_minor.result != 'success'

    runs-on: ubuntu-latest
    steps:
    - name: setting patch version
      run: echo update patch
  
  commit_changes:
    needs: [update_patch, if_merged]
    if: |
      always() &&
      needs.if_merged.result == 'success'

    runs-on: ubuntu-latest
    steps:
    - name: Setting checkout
      uses: actions/checkout@v3
    - name: See what the branch
      run: git branch
    
    - name: See github.ref_name
      run: echo ${{ github.ref_name }}
    - name: See github.head_ref
      run: echo ${{ github.head_ref }}
    - name: Obter mensagem de squash commit
      run: |
          pull_request_number="${{ github.event.number }}"
          repository_url="${{ github.event.repository.html_url }}"
          pull_request_url="${repository_url}}/pull/${pull_request_number}"
          echo "Pull Request URL: ${pull_request_url}"
  
  versioning:
    runs-on: ubuntu-latest
    steps:
    - name: Setting checkout
      uses: actions/checkout@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: update major for testing
      run: |
        make update_major PR_DESCRIPTION="Espero que essa mensagem\napareca viu"
    
    - name: See branch name
      run: |
        git branch

    - name: Setting commiter
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "action@github.com"
    
    - name: Commit & push
      run: |
        git add .
        git commit -m "version update"
        git push origin ${{ github.head_ref }}
    #- name: testing endbug
    #  uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
    #  with:
        # Determines the way the action fills missing author name and email. Three options are available:
        # - github_actor -> UserName <UserName@users.noreply.github.com>
        # - user_info -> Your Display Name <your-actual@email.com>
        # - github_actions -> github-actions <email associated with the github logo>
        # Default: github_actor
    #    default_author: github_actor

        # The message for the commit.
        # Default: 'Commit from GitHub Actions (name of the workflow)'
    #    message: 'EndBug do this'

# apenas testando
# vamos testar se ele faz o major certinho